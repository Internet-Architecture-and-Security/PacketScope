const Guarder = {
  'Guarder.connectionMonitor': 'Connection Monitor',
  'Guarder.filterManagement': 'Filter Management',
  'Guarder.aiIntelligenceCenter': 'AI Intelligence Center',
  'Guarder.aiConfigInvalid': 'AI Configuration Invalid',
  'Guarder.aiConfigInvalidDesc': 'Please configure API key and model parameters in AI Center first',
  'Guarder.aiAnalysisComplete': 'AI Analysis Complete',
  'Guarder.aiAnalysisCompleteDesc': 'Successfully generated {count} intelligent filter rules',
  'Guarder.aiAnalysisCompleteWithRules': 'AI has completed network data analysis and generated {count} intelligent filter rules.',
  'Guarder.aiAnalysisCompleteNoRules': 'AI has completed network data analysis but no filter rules were generated.',
  'Guarder.unknownError': 'Unknown Error',
  'Guarder.checkNetworkAndConfig': 'Please check network connection and AI configuration',
  'Guarder.aiAnalysisFailed': 'AI Analysis Failed',
  'Guarder.aiGeneratedRule': 'AI Generated Rule',
  'Guarder.ruleApplySuccess': 'Rules Applied Successfully',
  'Guarder.ruleApplySuccessDesc': 'Applied {count} AI-generated filter rules',
  'Guarder.prepareData': 'Prepare Data',
  'Guarder.prepareDataDesc': 'Collecting network connection and traffic data',
  'Guarder.aiAnalysis': 'AI Analysis',
  'Guarder.aiAnalysisDesc': 'Using large language model to analyze and generate rules',
  'Guarder.complete': 'Complete',
  'Guarder.completeDesc': 'Analysis complete, rules generated',
  'Guarder.aiAnalysisReport': 'AI Analysis Report',
  'Guarder.securitySuggestions': 'Security Suggestions',
  'Guarder.tokenUsage': 'Token Usage',
  'Guarder.ruleType': 'Rule Type',
  'Guarder.protocol': 'Protocol',
  'Guarder.sourceIp': 'Source IP',
  'Guarder.destinationIp': 'Destination IP',
  'Guarder.port': 'Port',
  'Guarder.tcpFlags': 'TCP Flags',
  'Guarder.action': 'Action',
  'Guarder.block': 'Block',
  'Guarder.allow': 'Allow',
  'Guarder.description': 'Description',
  'Guarder.aiSmartGenerateFilter': 'AI Smart Generate Filter',
  'Guarder.aiAnalysisError': 'AI Analysis Error',
  'Guarder.aiConfigIncomplete': 'AI Configuration Incomplete',
  'Guarder.aiConfigIncompleteDesc': 'Please configure API key and model parameters in AI Center before using this feature',
  'Guarder.aiAnalyzingNetwork': 'AI is analyzing network data...',
  'Guarder.aiAnalysisConfig': 'AI Analysis Configuration',
  'Guarder.aiAnalysisConfigDesc': 'Select analysis type and data scope. AI will generate intelligent filter rules based on current network status.',
  'Guarder.analysisStrategy': 'Analysis Strategy',
  'Guarder.pleaseSelectAnalysisStrategy': 'Please select analysis strategy',
  'Guarder.securityOriented': 'Security Oriented',
  'Guarder.performanceOriented': 'Performance Oriented',
  'Guarder.custom': 'Custom',
  'Guarder.customAnalysisPrompt': 'Custom Analysis Prompt',
  'Guarder.pleaseEnterCustomPrompt': 'Please enter custom analysis prompt',
  'Guarder.customPromptPlaceholder': 'e.g.: Focus on SSH and HTTP service security, identify brute force attacks...',
  'Guarder.includeDataTypes': 'Include Data Types',
  'Guarder.tcpConnectionData': 'TCP Connection Data',
  'Guarder.udpConnectionData': 'UDP Connection Data',
  'Guarder.icmpTrafficData': 'ICMP Traffic Data',
  'Guarder.performanceStatsData': 'Performance Statistics Data',
  'Guarder.startAiAnalysis': 'Start AI Analysis',
  'Guarder.analysisResults': 'Analysis Results',
  'Guarder.generatedRules': 'Generated Rules ({count})',
  'Guarder.aiGeneratedRulesDesc': 'AI has generated {count} intelligent filter rules, please select rules to apply:',
  'Guarder.cancel': 'Cancel',
  'Guarder.applySelectedRules': 'Apply Selected Rules ({count})',
}

const ConnectionsMonitor = {
  "ConnectionsMonitor.title": "Network Connection Monitor",
    "ConnectionsMonitor.subtitle": "Real-time monitoring of network connection status and traffic data",
    "ConnectionsMonitor.totalPackets": "Total Packets",
    "ConnectionsMonitor.totalBytes": "Total Bytes",
    "ConnectionsMonitor.droppedPackets": "Dropped Packets",
    "ConnectionsMonitor.malformedPackets": "Malformed Packets",
    "ConnectionsMonitor.connectionInfo": "Connection Info",
    "ConnectionsMonitor.detailInfo": "Detail Info", 
    "ConnectionsMonitor.searchPlaceholder": "Search IP address or protocol...",
    "ConnectionsMonitor.startMonitoring": "Start Monitoring",
    "ConnectionsMonitor.stopMonitoring": "Stop Monitoring",
    "ConnectionsMonitor.refreshNow": "Refresh Now",
    "ConnectionsMonitor.exportData": "Export Data",
    "ConnectionsMonitor.connectionDetails": "Connection Details",
    "ConnectionsMonitor.totalConnections": "Total {count} connection records",
    "ConnectionsMonitor.noMatchingConnections": "No matching connections found",
    "ConnectionsMonitor.adjustSearchCriteria": "Try adjusting search criteria",
    "ConnectionsMonitor.dataFetchError": "Data Fetch Failed",
    "ConnectionsMonitor.dataFetchErrorDescription": "Unable to fetch data: {error}{retry}",
    "ConnectionsMonitor.retryInfo": " (Retry {current}/{total})",
    "ConnectionsMonitor.monitoringStarted": "Monitoring Started",
    "ConnectionsMonitor.monitoringStartedDescription": "Started real-time network connection monitoring",
    "ConnectionsMonitor.monitoringStopped": "Monitoring Stopped",
    "ConnectionsMonitor.monitoringStoppedDescription": "Stopped real-time monitoring",
    "ConnectionsMonitor.refreshSuccess": "Refresh Successful",
    "ConnectionsMonitor.refreshSuccessDescription": "Data has been updated",
    "ConnectionsMonitor.exportSuccess": "Export Successful",
    "ConnectionsMonitor.exportSuccessDescription": "Data has been saved to local file"
}


const FiltersManager = {
  "FiltersManager.title": "Network Filter Management",
    "FiltersManager.subtitle": "Manage and configure network traffic filtering rules to protect network security",
    "FiltersManager.totalRules": "Total Rules",
    "FiltersManager.enabledRules": "Enabled Rules",
    "FiltersManager.disabledRules": "Disabled Rules",
    "FiltersManager.aiGeneratedRules": "AI Generated Rules",
    "FiltersManager.ruleType": "Rule Type",
    "FiltersManager.sourceIp": "Source IP",
    "FiltersManager.protocol": "Protocol",
    "FiltersManager.action": "Action",
    "FiltersManager.status": "Status",
    "FiltersManager.comment": "Comment",
    "FiltersManager.operations": "Operations",
    "FiltersManager.actionDrop": "Drop",
    "FiltersManager.actionAllow": "Allow",
    "FiltersManager.aiConfidence": "AI Confidence: {confidence}%",
    "FiltersManager.edit": "Edit",
    "FiltersManager.delete": "Delete",
    "FiltersManager.confirmDelete": "Are you sure you want to delete this filter?",
    "FiltersManager.confirm": "Confirm",
    "FiltersManager.cancel": "Cancel",
    "FiltersManager.searchPlaceholder": "Search IP address or comment...",
    "FiltersManager.allTypes": "All Types",
    "FiltersManager.basicRule": "Basic Rule",
    "FiltersManager.tcpRule": "TCP Rule",
    "FiltersManager.udpRule": "UDP Rule",
    "FiltersManager.icmpRule": "ICMP Rule",
    "FiltersManager.ruleStatus": "Rule Status",
    "FiltersManager.allStatus": "All Status",
    "FiltersManager.enabled": "Enabled",
    "FiltersManager.disabled": "Disabled",
    "FiltersManager.allActions": "All Actions",
    "FiltersManager.addFilter": "Add Filter",
    "FiltersManager.aiGenerate": "AI Generate",
    "FiltersManager.totalRulesCount": "Total {total} rules",
    "FiltersManager.noFiltersFound": "No filters found",
    "FiltersManager.adjustSearchOrCreate": "Try adjusting search criteria or create a new filter",
    "FiltersManager.editFilter": "Edit Filter",
    "FiltersManager.selectRuleType": "Please select rule type",
    "FiltersManager.selectAction": "Please select action",
    "FiltersManager.sourceIpAddress": "Source IP Address",
    "FiltersManager.sourceIpTooltip": "Leave empty for any IP (0.0.0.0)",
    "FiltersManager.sourceIpPlaceholder": "e.g. 192.168.1.100 (empty=any)",
    "FiltersManager.destIpAddress": "Destination IP Address",
    "FiltersManager.destIpTooltip": "Leave empty for any IP (0.0.0.0)",
    "FiltersManager.destIpPlaceholder": "e.g. 8.8.8.8 (empty=any)",
    "FiltersManager.sourcePort": "Source Port",
    "FiltersManager.destPort": "Destination Port",
    "FiltersManager.portTooltip": "0 means any port",
    "FiltersManager.portPlaceholder": "0=any",
    "FiltersManager.selectProtocol": "Please select protocol",
    "FiltersManager.tcpSpecificFields": "TCP Specific Fields",
    "FiltersManager.tcpSpecificDescription": "Configure TCP flag matching conditions",
    "FiltersManager.tcpFlags": "TCP Flags",
    "FiltersManager.tcpFlagsTooltip": "TCP flags to match, 0 means no check",
    "FiltersManager.selectTcpFlags": "Select TCP flags to match",
    "FiltersManager.tcpFlagsMask": "Flags Mask",
    "FiltersManager.tcpFlagsMaskTooltip": "Specify which flags to check, 0 means ignore all flags",
    "FiltersManager.selectTcpFlagsMask": "Select flags to check",
    "FiltersManager.tcpFlagFin": "FIN (Connection Termination)",
    "FiltersManager.tcpFlagSyn": "SYN (Connection Establishment)",
    "FiltersManager.tcpFlagRst": "RST (Connection Reset)",
    "FiltersManager.tcpFlagPsh": "PSH (Push Data)",
    "FiltersManager.tcpFlagAck": "ACK (Acknowledgment)",
    "FiltersManager.tcpFlagUrg": "URG (Urgent Data)",
    "FiltersManager.icmpSpecificFields": "ICMP Specific Fields",
    "FiltersManager.icmpSpecificDescription": "Configure ICMP type, code and inner packet filtering conditions",
    "FiltersManager.icmpType": "ICMP Type",
    "FiltersManager.icmpTypeTooltip": "255 means any type",
    "FiltersManager.selectIcmpType": "Select ICMP type",
    "FiltersManager.icmpCode": "ICMP Code",
    "FiltersManager.icmpCodeTooltip": "255 means any code",
    "FiltersManager.icmpCodePlaceholder": "255=any",
    "FiltersManager.icmpEchoReply": "Echo Reply (0)",
    "FiltersManager.icmpDestUnreachable": "Destination Unreachable (3)",
    "FiltersManager.icmpRedirect": "Redirect (5)",
    "FiltersManager.icmpEchoRequest": "Echo Request (8)",
    "FiltersManager.icmpRouterAdv": "Router Advertisement (9)",
    "FiltersManager.icmpRouterSelect": "Router Selection (10)",
    "FiltersManager.icmpTimeExceeded": "Time Exceeded (11)",
    "FiltersManager.icmpParamProblem": "Parameter Problem (12)",
    "FiltersManager.icmpTimestamp": "Timestamp (13)",
    "FiltersManager.icmpTimestampReply": "Timestamp Reply (14)",
    "FiltersManager.innerPacketFilter": "Inner Packet Filter (for ICMP error messages)",
    "FiltersManager.innerPacketDescription": "Filter original packet information contained in ICMP error messages",
    "FiltersManager.innerSourceIp": "Inner Source IP",
    "FiltersManager.innerSourceIpTooltip": "Source IP of the original packet in ICMP error message, 0.0.0.0 means any",
    "FiltersManager.innerSourceIpPlaceholder": "e.g. 192.168.1.100 (empty=any)",
    "FiltersManager.innerDestIp": "Inner Destination IP",
    "FiltersManager.innerDestIpTooltip": "Destination IP of the original packet in ICMP error message, 0.0.0.0 means any",
    "FiltersManager.innerDestIpPlaceholder": "e.g. 8.8.8.8 (empty=any)",
    "FiltersManager.innerProtocol": "Inner Protocol",
    "FiltersManager.innerProtocolTooltip": "Protocol of the original packet in ICMP error message, 0 means any",
    "FiltersManager.selectInnerProtocol": "Select inner protocol",
    "FiltersManager.udpRuleDescription": "UDP rules mainly use source and destination ports for filtering, no additional specific field configuration is required.",
    "FiltersManager.ruleDescription": "Rule Description",
    "FiltersManager.ruleDescriptionPlaceholder": "Enter rule description, it is recommended to describe the purpose and effective conditions of the rule in detail",
    "FiltersManager.enableRule": "Enable Rule"
}

const AiCenter = {
  // 页面标题和描述
  'AiCenter.title': 'AI Intelligent Filter Generator',
  'AiCenter.description': 'Automatically analyze network traffic and generate eBPF filter rules using artificial intelligence technology',
  
  // 加载状态
  'AiCenter.loading': 'Processing...',
  
  // AI服务状态
  'AiCenter.aiServiceConfigured': 'AI Service Configured',
  'AiCenter.aiServiceNotConfigured': 'AI Service Configuration Incomplete',
  'AiCenter.aiServiceConfiguredDesc': 'Using Model: {model} | Endpoint: {endpoint}',
  'AiCenter.aiServiceNotConfiguredDesc': 'Please complete API key, endpoint and model configuration before using AI features',
  'AiCenter.configureNow': 'Configure Now',
  'AiCenter.unknown': 'Unknown',
  
  // 功能卡片
  'AiCenter.aiConfig': 'AI Configuration',
  'AiCenter.aiConfigDesc': 'Configure OpenAI API key, model parameters and request settings',
  'AiCenter.configured': 'Configured',
  'AiCenter.notConfigured': 'Not Configured',
  'AiCenter.notSet': 'Not Set',
  
  'AiCenter.intelligentGeneration': 'Intelligent Generation',
  'AiCenter.intelligentGenerationDesc': 'Automatically generate filter rules based on current network data',
  'AiCenter.securityOriented': 'Security Oriented',
  'AiCenter.performanceOriented': 'Performance Oriented',
  'AiCenter.custom': 'Custom',
  'AiCenter.requiresAiService': 'Requires AI Service Configuration',
  
  'AiCenter.networkAnalysis': 'Network Analysis',
  'AiCenter.networkAnalysisDesc': 'Analyze network traffic patterns and identify potential threats',
  'AiCenter.threatDetection': 'Threat Detection',
  'AiCenter.trafficAnalysis': 'Traffic Analysis',
  
  // 核心特性
  'AiCenter.coreFeatures': 'Core Features',
  'AiCenter.feature1': 'Intelligent analysis of TCP/UDP connections and ICMP traffic',
  'AiCenter.feature2': 'Support multiple analysis strategies and custom prompts',
  'AiCenter.feature3': 'Generate detailed annotations and security recommendations',
  'AiCenter.feature4': 'Flexible OpenAI endpoint and model configuration',
  
  // 结果展示
  'AiCenter.intelligentGenerationResult': 'AI Intelligent Generation Result',
  'AiCenter.threatAnalysis': 'Threat Analysis:',
  'AiCenter.securityRecommendations': 'Security Recommendations:',
  'AiCenter.generatedRules': 'Generated Rules:',
  'AiCenter.tokenUsage': 'Token Usage:',
  'AiCenter.generationFailed': 'AI Filter Generation Failed',
  
  'AiCenter.networkAnalysisResult': 'AI Network Analysis Result',
  'AiCenter.networkTrafficSummary': 'Network Traffic Summary:',
  
  // 模态框标题
  'AiCenter.aiConfigSettings': 'AI Configuration Settings',
  'AiCenter.aiNetworkAnalysis': 'AI Network Analysis',
  
  // 表单标签和提示
  'AiCenter.configDescription': 'Configuration Description',
  'AiCenter.configDescriptionText': 'Please configure your OpenAI API key and related parameters. This information will be used for AI analysis and rule generation.',
  'AiCenter.openaiEndpoint': 'OpenAI Endpoint',
  'AiCenter.apiKey': 'API Key',
  'AiCenter.model': 'Model',
  'AiCenter.temperature': 'Temperature',
  'AiCenter.timeout': 'Timeout (seconds)',
  'AiCenter.enableDebugMode': 'Enable Debug Mode',
  
  // 表单验证消息
  'AiCenter.pleaseEnterOpenaiEndpoint': 'Please enter OpenAI endpoint',
  'AiCenter.pleaseEnterApiKey': 'Please enter API key',
  'AiCenter.pleaseSelectOrEnterModel': 'Please select or enter model name',
  'AiCenter.pleaseEnterTemperature': 'Please enter Temperature value',
  'AiCenter.pleaseEnterTimeout': 'Please enter timeout',
  'AiCenter.modelPlaceholder': 'Please enter or select model name',
  'AiCenter.apiKeyPlaceholder': 'AI API Key',
  
  // 网络分析表单
  'AiCenter.analysisDescription': 'Network Analysis Description',
  'AiCenter.analysisDescriptionText': 'This feature only analyzes current network traffic patterns and threat conditions, and will not generate filter rules. Suitable for understanding network security status.',
  'AiCenter.analysisScope': 'Analysis Scope',
  'AiCenter.analyzeTcpConnections': 'Analyze TCP Connections',
  'AiCenter.analyzeUdpConnections': 'Analyze UDP Connections',
  'AiCenter.analyzeIcmpTraffic': 'Analyze ICMP Traffic',
  'AiCenter.includeStatistics': 'Include Statistics',
  'AiCenter.customAnalysisPrompt': 'Custom Analysis Prompt',
  'AiCenter.customAnalysisPlaceholder': 'Optional: Provide specific analysis instructions, such as \'analyze abnormal behavior in traffic patterns\'...',
  
  // 按钮文本
  'AiCenter.cancel': 'Cancel',
  'AiCenter.startAnalysis': 'Start Analysis',
  
  // 通知消息
  'AiCenter.aiServiceNotConfiguredTitle': 'AI Service Not Configured',
  'AiCenter.aiServiceNotConfiguredContent': 'Please configure AI service parameters first before using intelligent analysis features. Configure now?',
  'AiCenter.configureImmediately': 'Configure Immediately',
  'AiCenter.configureLater': 'Configure Later',
  
  'AiCenter.aiConfigSaved': 'AI Configuration Saved',
  'AiCenter.configUpdatedSuccessfully': 'Configuration updated successfully',
  'AiCenter.saveAiConfigFailed': 'Failed to save AI configuration',
  'AiCenter.checkConfigAndRetry': 'Please check configuration and retry',
  
  'AiCenter.aiNetworkAnalysisComplete': 'AI Network Analysis Complete',
  'AiCenter.analysisResultGenerated': 'Analysis result generated',
  'AiCenter.aiNetworkAnalysisFailed': 'AI Network Analysis Failed',
  'AiCenter.pleaseRetry': 'Please retry',
  
  'AiCenter.aiFilterGenerationComplete': 'AI Filter Generation Complete',
  'AiCenter.filterRulesGenerated': 'Filter rules generated',
  'AiCenter.aiFilterGenerationFailed': 'AI Filter Generation Failed'
};

const useFilters = {
  // 错误消息
  'useFilters.fetchFiltersFailed': 'Failed to fetch filters',
  'useFilters.addFilterFailed': 'Failed to add filter',
  'useFilters.updateFilterFailed': 'Failed to update filter',
  'useFilters.deleteFilterFailed': 'Failed to delete filter',
  'useFilters.toggleFilterFailed': 'Failed to toggle filter status',
  
  // 成功消息
  'useFilters.addSuccess': 'Added successfully',
  'useFilters.updateSuccess': 'Updated successfully',
  'useFilters.deleteSuccess': 'Deleted successfully',
  'useFilters.enableSuccess': 'Enabled successfully',
  'useFilters.disableSuccess': 'Disabled successfully',
  
  // 默认过滤器注释
  'useFilters.blockIcmpPing': 'Block all ICMP ping requests (Echo Request)',
  'useFilters.blockIcmpDestUnreachable': 'Block ICMP Destination Unreachable with inner UDP packets',
  'useFilters.blockUdpTraceroute': 'Block UDP traceroute attempts (ICMP Time Exceeded)',
  'useFilters.blockTelnet': 'Block Telnet (insecure remote access)',
  'useFilters.blockRpcEndpoint': 'Block RPC Endpoint Mapper (Windows vulnerability)',
  'useFilters.blockSmbCifs': 'Block SMB/CIFS (ransomware vector)',
  'useFilters.blockNetbios': 'Block NetBIOS Session Service',
  'useFilters.blockMsSqlServer': 'Block MS SQL Server (external access)',
  'useFilters.blockRdp': 'Block RDP (brute force target)',
  'useFilters.blockVnc': 'Block VNC (insecure remote access)'
};

export default {
  ...Guarder,
  ...ConnectionsMonitor,
  ...FiltersManager,
  ...AiCenter,
  ...useFilters
};
